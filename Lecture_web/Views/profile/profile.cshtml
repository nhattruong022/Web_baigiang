    @model Lecture_web.Models.TaiKhoanModels
    <!-- Profile Content -->
    <div class="dashboard">
      <div class="dashboard-grid">
        <!-- Profile Information -->
        <div class="dashboard-card">
          <div class="card-header">
            <h2>Thông tin cá nhân</h2>
            <button class="btn-primary" onclick="openEditProfileModal()">
              <i class="fas fa-edit"></i>
              Chỉnh sửa
            </button>
          </div>
          <div class="profile-info">
            <div class="profile-avatar">
              <img src="@(!string.IsNullOrEmpty(Model.AnhDaiDien) ? Model.AnhDaiDien : " /images/avatar.jpg")?v=@DateTime.Now.Ticks" alt="Profile Avatar" onerror="handleProfileAvatarError(this)">
              <button class="btn-secondary" onclick="openChangeAvatarModal()">
                <i class="fas fa-camera"></i>
                Đổi ảnh
              </button>
            </div>
            <div class="profile-details">
              <div class="info-group">
                <label>Tên đăng nhập</label>
                <p>@Model.TenDangNhap</p>
              </div>
              <div class="info-group">
                <label>Họ và tên</label>
                <p>@Model.HoTen</p>
              </div>
              <div class="info-group">
                <label>Email</label>
                <p>@Model.Email</p>
              </div>
              <div class="info-group">
                <label>Số điện thoại</label>
                <p>@Model.SoDienThoai</p>
              </div>
              <div class="info-group">
                <label>Vai trò</label>
                <p>@Model.VaiTro</p>
              </div>
            </div>
          </div>
        </div>

        <!-- Security Settings -->
        <div class="dashboard-card">
          <div class="card-header">
            <h2>Bảo mật</h2>
          </div>
          <div class="security-settings">
            <button class="btn-primary" onclick="openChangePasswordModal()">
              <i class="fas fa-key"></i>
              Đổi mật khẩu
            </button>
            <button class="btn-secondary" onclick="logout()">
              <i class="fas fa-sign-out-alt"></i>
              Đăng xuất
            </button>
          </div>
        </div>
      </div>
    </div>
    </main>
    </div>

    <!-- Edit Profile Modal -->
    <div class="modal" id="editProfileModal">
      <div class="modal-content">
        <div class="modal-header">
          <h2>Chỉnh sửa thông tin cá nhân</h2>
          <button class="close-modal" onclick="closeEditProfileModal()">
            <i class="fas fa-times"></i>
          </button>
        </div>
        <form class="modal-form" id="editProfileForm">
          <div class="form-group">
            <label>Họ và tên</label>
            <input type="text" name="HoTen" value="@Model.HoTen" required>
          </div>
          <div class="form-group">
            <label>Email</label>
            <input type="email" name="Email" value="@Model.Email" required>
          </div>
          <div class="form-group">
            <label>Số điện thoại</label>
            <input type="tel" name="SDT" value="@Model.SoDienThoai" required>
          </div>
          <div class="form-actions">
            <button type="button" class="btn-secondary" onclick="closeEditProfileModal()">Hủy</button>
            <button type="submit" class="btn-primary">Lưu thay đổi</button>
          </div>
        </form>
      </div>
    </div>

    <!-- Change Password Modal -->
    <div class="modal" id="changePasswordModal">
      <div class="modal-content">
        <div class="modal-header">
          <h2>Đổi mật khẩu</h2>
          <button class="close-modal" onclick="closeChangePasswordModal()">
            <i class="fas fa-times"></i>
          </button>
        </div>
        <form class="modal-form" id="changePasswordForm">
          <div class="form-group">
            <label>Mật khẩu hiện tại</label>
            <div class="password-input-wrapper">
              <input type="text" name="oldPassword" id="oldPassword" required>
              <button type="button" class="password-toggle" onclick="togglePassword('oldPassword')">
                <i class="fas fa-eye-slash" id="oldPassword-icon"></i>
              </button>
            </div>
          </div>
          <div class="form-group">
            <label>Mật khẩu mới</label>
            <div class="password-input-wrapper">
              <input type="text" name="newPassword" id="newPassword" required>
              <button type="button" class="password-toggle" onclick="togglePassword('newPassword')">
                <i class="fas fa-eye-slash" id="newPassword-icon"></i>
              </button>
            </div>
          </div>
          <div class="form-group">
            <label>Xác nhận mật khẩu mới</label>
            <div class="password-input-wrapper">
              <input type="text" name="confirmPassword" id="confirmPassword" required>
              <button type="button" class="password-toggle" onclick="togglePassword('confirmPassword')">
                <i class="fas fa-eye-slash" id="confirmPassword-icon"></i>
              </button>
            </div>
            <div id="changePasswordMsg" style="margin-top:6px;"></div>
          </div>
          <div class="form-actions">
            <button type="button" class="btn-secondary" onclick="closeChangePasswordModal()">Hủy</button>
            <button type="submit" class="btn-primary">Đổi mật khẩu</button>
          </div>
        </form>
      </div>
    </div>

    <!-- Change Avatar Modal -->
    <div class="modal" id="changeAvatarModal">
      <div class="modal-content">
        <div class="modal-header">
          <h2>Đổi ảnh đại diện</h2>
          <button class="close-modal" onclick="closeChangeAvatarModal()">
            <i class="fas fa-times"></i>
          </button>
        </div>
        <form class="modal-form" id="changeAvatarForm" enctype="multipart/form-data">
          <div class="form-group">
            <label>Chọn ảnh</label>
            <input type="file" name="avatar" accept="image/*" required>
          </div>
          <div class="form-actions">
            <button type="button" class="btn-secondary" onclick="closeChangeAvatarModal()">Hủy</button>
            <button type="submit" class="btn-primary">Cập nhật ảnh</button>
          </div>
        </form>
      </div>
    </div>

    <style>
      .password-input-wrapper {
        position: relative;
        display: flex;
        align-items: center;
      }

      .password-input-wrapper input {
        flex: 1;
        padding-right: 45px;
      }

      .password-toggle {
        position: absolute;
        right: 10px;
        background: none;
        border: none;
        cursor: pointer;
        color: #666;
        font-size: 16px;
        padding: 5px;
        z-index: 1;
        transition: color 0.3s ease;
      }

      .password-toggle:hover {
        color: #3498db;
      }

      .password-toggle:focus {
        outline: none;
      }
    </style>

    <script>
      // Function xử lý lỗi avatar profile
      function handleProfileAvatarError(img) {
        console.log('Profile avatar error, falling back to default');
        img.src = '/images/avatar.jpg?v=' + new Date().getTime();
        img.onerror = null; // Prevent infinite loop
      }

      // Đồng bộ avatar khi trang load
      document.addEventListener('DOMContentLoaded', function() {
        // Kiểm tra localStorage để lấy avatar mới nhất
        var updatedUrl = localStorage.getItem('updatedAvatarUrl');
        if (updatedUrl) {
          var profileAvatar = document.querySelector('.profile-avatar img');
          if (profileAvatar) {
            profileAvatar.src = updatedUrl + '?t=' + new Date().getTime();
          }
        }

        // Lắng nghe sự kiện cập nhật avatar
        window.addEventListener('avatarUpdated', function(event) {
          var profileAvatar = document.querySelector('.profile-avatar img');
          if (profileAvatar && event.detail.newAvatarUrl) {
            profileAvatar.src = event.detail.newAvatarUrl + '?t=' + new Date().getTime();
          }
        });
      });

      // Modal functions
      function openEditProfileModal() {
        document.getElementById('editProfileModal').classList.add('active');
      }

      function closeEditProfileModal() {
        document.getElementById('editProfileModal').classList.remove('active');
      }

      function openChangePasswordModal() {
        document.getElementById('changePasswordModal').classList.add('active');
      }

      function closeChangePasswordModal() {
        document.getElementById('changePasswordModal').classList.remove('active');
      }

      function openChangeAvatarModal() {
        document.getElementById('changeAvatarModal').classList.add('active');
      }

      function closeChangeAvatarModal() {
        document.getElementById('changeAvatarModal').classList.remove('active');
      }

      function logout() {
        if (confirm('Bạn có chắc chắn muốn đăng xuất?')) {
          window.location.href = '/profile/LogOut';
        }
      }

      function toggleUserMenu() {
        document.querySelector('.user-dropdown').classList.toggle('active');
      }

      // Function để toggle hiển thị password
      function togglePassword(fieldId) {
        const passwordField = document.getElementById(fieldId);
        const icon = document.getElementById(fieldId + '-icon');

        if (passwordField.type === 'text') {
          passwordField.type = 'password';
          icon.classList.remove('fa-eye-slash');
          icon.classList.add('fa-eye');
        } else {
          passwordField.type = 'text';
          icon.classList.remove('fa-eye');
          icon.classList.add('fa-eye-slash');
        }
      }

      // Close dropdown when clicking outside
      document.addEventListener('click', function(event) {
        const userProfile = document.querySelector('.user-profile');
        const dropdown = document.querySelector('.user-dropdown');
        if (!userProfile.contains(event.target)) {
          dropdown.classList.remove('active');
        }
      });

      // Submit form chỉnh sửa profile bằng AJAX
      const editProfileForm = document.getElementById('editProfileForm');
      if (editProfileForm) {
        editProfileForm.addEventListener('submit', function(e) {
          e.preventDefault();
          const formData = new FormData(editProfileForm);
          fetch('/profile/EditProfilAjax', {
              method: 'POST',
              body: new URLSearchParams([...formData])
            })
            .then(res => {
              if (res.redirected) {
                window.location.href = res.url;
              } else {
                location.reload();
              }
            });
        });
      }

      // Submit form đổi ảnh đại diện bằng AJAX
      const changeAvatarForm = document.getElementById('changeAvatarForm');
      if (changeAvatarForm) {
        changeAvatarForm.addEventListener('submit', function(e) {
          e.preventDefault();
          const formData = new FormData(changeAvatarForm);

          // Hiển thị loading
          const submitBtn = changeAvatarForm.querySelector('button[type="submit"]');
          const originalText = submitBtn.textContent;
          submitBtn.textContent = 'Đang tải...';
          submitBtn.disabled = true;

          fetch('/profile/UploadAvatar', {
              method: 'POST',
              body: formData
            })
            .then(res => res.json())
            .then(data => {
              if (data.success) {
                const newAvatarUrl = data.url;
                const timestamp = new Date().getTime();

                // Cập nhật avatar trong profile
                const profileAvatar = document.querySelector('.profile-avatar img');
                if (profileAvatar) {
                  profileAvatar.src = newAvatarUrl + '?t=' + timestamp;
                }

                // Cập nhật avatar trong top bar
                var topBarAvatar = document.getElementById('topBarAvatar');
                if (topBarAvatar) {
                  topBarAvatar.src = newAvatarUrl + '?t=' + timestamp;
                }

                // Lưu vào localStorage để sync giữa các tab
                localStorage.setItem('updatedAvatarUrl', newAvatarUrl);

                // Dispatch event để notify các component khác
                window.dispatchEvent(new CustomEvent('avatarUpdated', {
                  detail: {
                    newAvatarUrl: newAvatarUrl
                  }
                }));

                closeChangeAvatarModal();

                // Hiển thị thông báo thành công
                alert(data.message || 'Cập nhật ảnh đại diện thành công!');

                // Force reload trang để đảm bảo đồng bộ hoàn toàn
                setTimeout(function() {
                  window.location.reload();
                }, 1000);

                console.log('Avatar updated successfully:', newAvatarUrl);
              } else {
                alert(data.message || 'Có lỗi xảy ra khi tải ảnh!');
              }
            })
            .catch(error => {
              console.error('Error uploading avatar:', error);
              alert('Có lỗi xảy ra khi tải ảnh!');
            })
            .finally(() => {
              // Reset button
              submitBtn.textContent = originalText;
              submitBtn.disabled = false;
            });
        });
      }

      // Submit form đổi mật khẩu bằng AJAX
      const changePasswordForm = document.getElementById('changePasswordForm');
      if (changePasswordForm) {
        changePasswordForm.addEventListener('submit', function(e) {
          e.preventDefault();
          const formData = new FormData(changePasswordForm);
          const oldPassword = formData.get('oldPassword');
          const newPassword = formData.get('newPassword');
          const confirmPassword = formData.get('confirmPassword');
          const msgDiv = document.getElementById('changePasswordMsg');
          msgDiv.innerHTML = '';
          if (newPassword !== confirmPassword) {
            msgDiv.innerHTML = '<span style="color:red">Mật khẩu mới và xác nhận không khớp.</span>';
            return;
          }
          fetch('/profile/ChangePassword', {
              method: 'POST',
              headers: {},
              body: new URLSearchParams({
                oldPassword,
                newPassword
              })
            })
            .then(res => res.json())
            .then(data => {
              if (data.success) {
                msgDiv.innerHTML = '<span style="color:green">' + data.message + '</span>';
                setTimeout(() => {
                  closeChangePasswordModal();
                }, 1500);
              } else {
                msgDiv.innerHTML = '<span style="color:red">' + data.message + '</span>';
              }
            });
        });
      }
    </script>