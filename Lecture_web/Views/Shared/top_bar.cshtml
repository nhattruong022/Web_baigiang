@using System.Security.Claims
@inject Lecture_web.ApplicationDbContext DbContext
@{
var avatar = "/images/avatar.jpg"; // Mặc định
var userName = "User";

// Luôn lấy thông tin user từ database nếu đã đăng nhập
if (User.Identity.IsAuthenticated)
{
try
{
var userId = int.Parse(User.FindFirstValue(ClaimTypes.NameIdentifier));
var currentUser = DbContext.TaiKhoan.FirstOrDefault(u => u.IdTaiKhoan == userId);
if (currentUser != null)
{
userName = currentUser.HoTen ?? currentUser.TenDangNhap ?? "User";

// Xử lý đường dẫn avatar - kiểm tra kỹ hơn
if (!string.IsNullOrEmpty(currentUser.AnhDaiDien) &&
!string.IsNullOrWhiteSpace(currentUser.AnhDaiDien) &&
currentUser.AnhDaiDien.Trim() != "")
{
string cleanPath = currentUser.AnhDaiDien.Trim();

// Nếu đường dẫn đã bắt đầu bằng / thì dùng trực tiếp
if (cleanPath.StartsWith("/"))
{
avatar = cleanPath;
}
// Nếu không thì thêm /images/ phía trước
else
{
avatar = "/images/" + cleanPath;
}

System.Diagnostics.Debug.WriteLine($"User {userName} has avatar: {avatar}");
}
else
{
avatar = "/images/avatar.jpg";
System.Diagnostics.Debug.WriteLine($"User {userName} has NO avatar, using default");
}
}
}
catch
{
userName = "User";
avatar = "/images/avatar.jpg";
}
}

// Override từ ViewBag nếu controller đã set
if (!string.IsNullOrEmpty(ViewBag.UserName as string))
{
userName = (string)ViewBag.UserName;
}
if (!string.IsNullOrEmpty(ViewBag.Avatar as string))
{
avatar = (string)ViewBag.Avatar;
}

// Final check - đảm bảo avatar không bị null/empty
if (string.IsNullOrEmpty(avatar) || string.IsNullOrWhiteSpace(avatar))
{
avatar = "/images/avatar.jpg";
}
}
<header class="top-bar">

  <div class="user-menu">
    <div class="notifications">
      <i class="fas fa-bell"></i>
      <span class="notification-badge">5</span>
    </div>
    <div class="user-profile" onclick="toggleUserMenu()">
      <img src="@avatar?v=@DateTime.Now.Ticks" alt="Avatar @userName" class="avatar" id="topBarAvatar" onerror="handleAvatarError(this)" style="border-radius: 50%; object-fit: cover;">
      <span class="user-name" id="topBarUserName">@userName</span>
      <i class="fas fa-chevron-down"></i>
      <div class="user-dropdown">
        <a href="/profile/profile">
          <i class="fas fa-user"></i>
          Thông tin cá nhân
        </a>
        <a href="#settings">
          <i class="fas fa-cog"></i>
          Cài đặt
        </a>
        <div class="dropdown-divider"></div>
        <a href="/profile/LogOut">
          <i class="fas fa-sign-out-alt"></i>
          Đăng xuất
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  // Function xử lý lỗi avatar
  function handleAvatarError(img) {
    console.log('Avatar error, falling back to default');
    img.src = '/images/avatar.jpg?v=' + new Date().getTime();
    img.onerror = null; // Prevent infinite loop
  }

  // Ưu tiên lấy avatar mới nhất từ localStorage khi load trang
  document.addEventListener('DOMContentLoaded', function() {
    var topBarAvatar = document.getElementById('topBarAvatar');

    // Kiểm tra localStorage trước
    var updatedUrl = localStorage.getItem('updatedAvatarUrl');
    if (updatedUrl && topBarAvatar) {
      topBarAvatar.src = updatedUrl + '?t=' + new Date().getTime();
    }

    // Kiểm tra nếu avatar hiện tại có valid không
    if (topBarAvatar && topBarAvatar.src) {
      var img = new Image();
      img.onload = function() {
        console.log('Avatar loaded successfully');
      };
      img.onerror = function() {
        console.log('Avatar failed to load, using default');
        handleAvatarError(topBarAvatar);
      };
      img.src = topBarAvatar.src;
    }
  });
</script>