@{
Layout = null;
ViewData["Title"] = "Quản lý bộ môn";

<link rel="stylesheet" href="~/css/bomon-management.css">
<link rel="stylesheet" href="~/css/style.css">
<link rel="stylesheet" href="~/css/admin-dashboard.css">
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">

}


<div class="app-container">
  @await Html.PartialAsync("~/Views/Shared/navbar.cshtml")
  <!-- Main Content Area -->
  <main class="main-content">
    <!-- Top Navigation Bar -->
    @await Html.PartialAsync("~/Views/Shared/top_bar.cshtml")
    <!-- Main Content Area -->

    <!-- Bộ môn Management Content -->
    <div class="container">
      <div id="bomon-alert" style="display:none; margin-bottom: 16px;">
        <div id="bomon-alert-content" class="alert alert-success" style="padding: 12px 20px; border-radius: 6px; background: #e6fff0; color: #1a7f37; border: 1px solid #b7ebc6; display: flex; align-items: center; gap: 8px;">
          <i class="fas fa-check-circle"></i>
          <span id="bomon-alert-message"></span>
        </div>
      </div>
      <div class="quick-actions">
        <button class="btn btn-primary" onclick="openModal('department')">+ Thêm bộ môn</button>
      </div>
      <div class="tabs-search-row" style="display: flex; align-items: center; justify-content: space-between; margin-bottom: 24px; gap: 16px;">
        <div class="tabs" style="margin-bottom: 0;">
          <button class="tab-btn active">Bộ môn</button>
        </div>
        <div class="search-bar">
          <i class="fas fa-search"></i>
          <input type="text" placeholder="Tìm kiếm bộ môn...">
        </div>
      </div>
      <!-- Bộ môn -->
      <div class="tab-content" id="departments" style="display:block;">
        <table>
          <thead>
            <tr>
              <th>Mã bộ môn</th>
              <th>Tên bộ môn</th>
              <th>Mô tả</th>
              <th>Mã khoa</th>
              <th>Ngày tạo</th>
              <th>Ngày cập nhật</th>
              <th>Thao tác</th>
            </tr>
          </thead>
          <tbody id="bomon-tbody"></tbody>
        </table>
      </div>
      <div id="pagination-container"></div>
    </div>
  </main>
</div>
<!-- Modal Thêm/Sửa -->
<div class="modal" id="modal-department">
  <div class="modal-content">
    <div class="modal-header">
      <h2>Thêm bộ môn</h2>
      <button class="close-modal" onclick="closeModal('department')">&times;</button>
    </div>
    <form class="modal-form" id="addBoMonForm">
      <div class="form-group">
        <label>Tên bộ môn</label>
        <input type="text" name="TenBoMon" required>
      </div>
      <div class="form-group">
        <label>Mô tả</label>
        <textarea name="MoTa" required></textarea>
      </div>
      <div class="form-group">
        <label>Mã khoa</label>
        <input type="number" name="IdKhoa" required>
      </div>
      <div class="form-actions">
        <button type="button" class="btn btn-edit" onclick="closeModal('department')">Hủy</button>
        <button type="submit" class="btn btn-primary">Lưu</button>
      </div>
    </form>
  </div>
</div>
<!-- Popup chỉnh sửa bộ môn -->
<div class="modal" id="modal-edit-department">
  <div class="modal-content">
    <div class="modal-header">
      <h2>Chỉnh sửa bộ môn</h2>
      <button class="close-modal" onclick="closeModal('edit-department')">&times;</button>
    </div>
    <form class="modal-form">
      <div class="form-group">
        <label>Tên bộ môn</label>
        <input type="text" name="TenBoMon" required>
      </div>
      <div class="form-group">
        <label>Mô tả</label>
        <textarea name="MoTa" required></textarea>
      </div>
      <div class="form-group">
        <label>Mã khoa</label>
        <input type="number" name="IdKhoa" required>
      </div>
      <div class="form-actions">
        <button type="button" class="btn btn-edit" onclick="closeModal('edit-department')">Hủy</button>
        <button type="submit" class="btn btn-primary">Lưu</button>
      </div>
    </form>
  </div>
</div>


<script>
  function toggleUserMenu() {
    document.querySelector('.user-dropdown').classList.toggle('active');
  }
  // Close dropdown when clicking outside
  document.addEventListener('click', function(event) {
    const userProfile = document.querySelector('.user-profile');
    const dropdown = document.querySelector('.user-dropdown');
    if (!userProfile.contains(event.target)) {
      dropdown.classList.remove('active');
    }
  });

  function logout() {
    if (confirm('Bạn có chắc chắn muốn đăng xuất?')) {
      window.location.href = '/Account/Login';
    }
  }

  function openModal(type) {
    document.getElementById('modal-' + type).classList.add('active');
  }

  function closeModal(type) {
    document.getElementById('modal-' + type).classList.remove('active');
  }
  // Tự động mở popup nếu có ?open=add
  window.addEventListener('DOMContentLoaded', function() {
    const params = new URLSearchParams(window.location.search);
    if (params.get('open') === 'add') {
      openModal('department');
    }
  });
  window.addEventListener('DOMContentLoaded', function() {
    const params = new URLSearchParams(window.location.search);
    if (params.get('open') === 'edit') {
      openModal('edit-department');
    }
  });
  // Tab switching logic
  const tabButtons = document.querySelectorAll('.tab-btn');
  const tabContents = document.querySelectorAll('.tab-content');
  tabButtons.forEach((btn, idx) => {
    btn.addEventListener('click', function() {
      tabButtons.forEach(b => b.classList.remove('active'));
      btn.classList.add('active');
      tabContents.forEach((content, cidx) => {
        content.style.display = (cidx === idx) ? 'block' : 'none';
      });
    });
  });

  function renderBoMonTable(data) {
    const tbody = document.getElementById('bomon-tbody');
    tbody.innerHTML = '';
    data.forEach(bm => {
      tbody.innerHTML += `
        <tr>
          <td>${bm.idBoMon}</td>
          <td>${bm.tenBoMon}</td>
          <td>${bm.moTa ?? ''}</td>
          <td>${bm.idKhoa}</td>
          <td>${bm.ngayTao ? new Date(bm.ngayTao).toLocaleString() : ''}</td>
          <td>${bm.ngayCapNhat ? new Date(bm.ngayCapNhat).toLocaleString() : ''}</td>
          <td class="actions">
            <button class="btn-icon" onclick="openEditModal(${bm.idBoMon})" title="Sửa">
              <i class="fas fa-pen-to-square"></i>
            </button>
            <button class="btn-icon" title="Xóa">
              <i class="fas fa-trash"></i>
            </button>
          </td>
        </tr>
      `;
    });
  }

  function loadBoMonList(page = 1, search = '') {
    fetch(`/Admin/QuanLyBoMon/GetBoMonList?search=${encodeURIComponent(search)}&page=${page}`)
      .then(res => res.json())
      .then(result => {
        renderBoMonTable(result.data);
        // Load phân trang
        fetch(`/Admin/QuanLyBoMon/PaginationPartial?currentPage=${result.currentPage}&totalPages=${result.totalPages}`)
          .then(response => response.text())
          .then(paginationHtml => {
            document.getElementById('pagination-container').innerHTML = paginationHtml;
          });
      });
  }

  function changeBoMonPage(page) {
    var search = document.querySelector('.search-bar input').value;
    loadBoMonList(page, search);
  }

  // Gọi khi trang vừa load
  document.addEventListener('DOMContentLoaded', function() {
    loadBoMonList(1);
    document.querySelector('.search-bar input').addEventListener('input', function() {
      loadBoMonList(1, this.value);
    });
  });

  function showBoMonAlert(message) {
    const alertDiv = document.getElementById('bomon-alert');
    const alertMsg = document.getElementById('bomon-alert-message');
    alertMsg.textContent = message;
    alertDiv.style.display = 'block';
    setTimeout(() => {
      alertDiv.style.display = 'none';
    }, 3000);
  }

  document.addEventListener('DOMContentLoaded', function() {
    document.getElementById('addBoMonForm').addEventListener('submit', function(e) {
      e.preventDefault();
      const formData = new FormData(this);
      const data = {
        TenBoMon: formData.get('TenBoMon'),
        MoTa: formData.get('MoTa'),
        IdKhoa: parseInt(formData.get('IdKhoa'))
      };
      fetch('/Admin/QuanLyBoMon/ThemBoMonAjax', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        })
        .then(res => res.json())
        .then(result => {
          if (result.success) {
            closeModal('department');
            loadBoMonList(1); // Reload danh sách
            showBoMonAlert('Thêm bộ môn thành công!');
          } else {
            alert(result.message || 'Có lỗi xảy ra!');
          }
        });
    });
  });

  let editingBoMonId = null;

  function openEditModal(id) {
    fetch(`/Admin/QuanLyBoMon/GetBoMonById?id=${id}`)
      .then(res => res.json())
      .then(bm => {
        editingBoMonId = bm.idBoMon;
        document.querySelector('#modal-edit-department input[name="TenBoMon"]').value = bm.tenBoMon;
        document.querySelector('#modal-edit-department textarea[name="MoTa"]').value = bm.moTa;
        document.querySelector('#modal-edit-department input[name="IdKhoa"]').value = bm.idKhoa;
        openModal('edit-department');
      });
  }

  document.addEventListener('DOMContentLoaded', function() {
    document.querySelector('#modal-edit-department form').addEventListener('submit', function(e) {
      e.preventDefault();
      const data = {
        IdBoMon: editingBoMonId,
        TenBoMon: this.querySelector('input[name="TenBoMon"]').value,
        MoTa: this.querySelector('textarea[name="MoTa"]').value,
        IdKhoa: parseInt(this.querySelector('input[name="IdKhoa"]').value)
      };
      fetch('/Admin/QuanLyBoMon/EditBoMonAjax', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        })
        .then(res => res.json())
        .then(result => {
          if (result.success) {
            closeModal('edit-department');
            loadBoMonList(1);
            showBoMonAlert('Cập nhật bộ môn thành công!');
          } else {
            alert(result.message || 'Có lỗi xảy ra!');
          }
        });
    });
  });
</script>