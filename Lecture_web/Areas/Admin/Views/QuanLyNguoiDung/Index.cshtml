@model List<Lecture_web.Models.TaiKhoanModels>
  @{
  Layout = null;
  ViewData["Title"] = "Quản lý người dùng";
  <link rel="stylesheet" href="~/css/style.css">
  <link rel="stylesheet" href="~/css/admin-dashboard.css">
  <link rel="stylesheet" href="~/css/user-management.css">
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  }





  <div class="app-container">
    @await Html.PartialAsync("~/Views/Shared/navbar.cshtml")
    <!-- Main Content Area -->
    <main class="main-content">
      <!-- Top Navigation Bar -->
      @await Html.PartialAsync("~/Views/Shared/top_bar.cshtml")
      <!-- Main Content Area -->
      <!-- User Table -->
      <div class="dashboard-card">
        <div id="user-alert" style="display:none; margin-bottom: 16px;">
          <div id="user-alert-content" class="alert alert-success" style="padding: 12px 20px; border-radius: 6px; background: #e6fff0; color: #1a7f37; border: 1px solid #b7ebc6; display: flex; align-items: center; gap: 8px;">
            <i class="fas fa-check-circle"></i>
            <span id="user-alert-message"></span>
          </div>
        </div>
        <div id="success-alert" style="display:none;position:relative;margin-bottom:18px;">
          <div style="display:flex;align-items:center;gap:10px;justify-content:center;background:#e6ffed;border:1.5px solid #27ae60;color:#219150;padding:12px 28px;border-radius:8px;font-size:1.08rem;font-weight:500;box-shadow:0 2px 8px rgba(39,174,96,0.08);transition:opacity 0.5s;">
            <i class="fas fa-check-circle" style="font-size:1.3rem;color:#27ae60;"></i>
            <span>Thêm người dùng thành công!</span>
          </div>
        </div>
        <!-- User Management Content -->
        <div class="dashboard">
          <!-- Quick Actions -->
          <div class="quick-actions" style="display:flex; justify-content:space-between; align-items:center; gap:12px;">
            <button class="btn-primary" onclick="openAddUserModal()">
              <i class="fas fa-user-plus"></i>
              Thêm người dùng mới
            </button>
          </div>
          <!-- Filters -->
          <div class="filters-section" style="display:flex; align-items:center; gap:24px; justify-content:space-between;">
            <div style="display:flex; align-items:center; gap:24px;">
              <div class="filter-group">
                <label>Vai trò:</label>
                <select class="role-filter" onchange="filterUsersAjax()">
                  <option value="all">Tất cả vai trò</option>
                  <option value="admin">Quản trị viên</option>
                  <option value="Sinhvien">Sinh viên</option>
                  <option value="Giangvien">Giảng viên</option>
                </select>
              </div>
              <div class="filter-group">
                <label>Trạng thái:</label>
                <select class="status-filter" onchange="filterUsersAjax()">
                  <option value="all">Tất cả trạng thái</option>
                  <option value="HoatDong">Đang hoạt động</option>
                  <option value="KhongHoatDong">Không hoạt động</option>
                </select>
              </div>
            </div>
            <div class="search-bar" style="width:260px;">
              <i class="fas fa-search"></i>
              <input type="text" placeholder="Tìm kiếm tên đăng nhập..." onchange="filterUsersAjax()">
            </div>
          </div>
          <div class="table-container">
            <table class="user-table">
              <thead>
                <tr>
                  <th><input type="checkbox" class="select-all"></th>
                  <th>Tên đăng nhập</th>
                  <th>Họ và tên</th>
                  <th>Vai trò</th>
                  <th>Email</th>
                  <th>Số điện thoại</th>
                  <th>Ảnh đại diện</th>
                  <th>Trạng thái</th>
                  <th>Ngày tạo</th>
                  <th>Thao tác</th>
                </tr>
              </thead>
              <tbody id="user-table-body">
                <!-- Sẽ được load bằng AJAX -->
              </tbody>
            </table>
          </div>
          <div id="pagination-container">
            <!-- Sẽ được load bằng AJAX -->
          </div>
        </div>
      </div>
    </main>
  </div>
  <!-- Add User Modal -->
  <div class="modal" id="addUserModal">
    <div class="modal-content">
      <div class="modal-header">
        <h2>Thêm người dùng mới</h2>
        <button class="close-modal" onclick="closeAddUserModal()">
          <i class="fas fa-times"></i>
        </button>
      </div>
      <form class="modal-form" id="addUserForm" enctype="multipart/form-data">
        <div class="form-group">
          <label>Tên đăng nhập</label>
          <input type="text" name="TenDangNhap" id="TenDangNhap">
          <span class="field-error" id="error-tenDangNhap" style="color:#c0392b;font-size:0.95em"></span>
        </div>
        <div class="form-group">
          <label>Mật khẩu</label>
          <input type="password" name="MatKhau" id="MatKhau">
          <span class="field-error" id="error-matKhau" style="color:#c0392b;font-size:0.95em"></span>
        </div>
        <div class="form-group">
          <label>Họ và tên</label>
          <input type="text" name="HoTen" id="HoTen">
          <span class="field-error" id="error-hoTen" style="color:#c0392b;font-size:0.95em"></span>
        </div>
        <div class="form-group">
          <label>Vai trò</label>
          <select name="VaiTro" id="VaiTro">
            <option value="admin">Quản trị viên</option>
            <option value="Giangvien">Giảng viên</option>
            <option value="Sinhvien">Sinh viên</option>
          </select>
        </div>
        <div class="form-group">
          <label>Email</label>
          <input type="email" name="Email" id="Email">
          <span class="field-error" id="error-email" style="color:#c0392b;font-size:0.95em"></span>
        </div>
        <div class="form-group">
          <label>Số điện thoại</label>
          <input type="text" name="SoDienThoai" id="SoDienThoai">
          <span class="field-error" id="error-soDienThoai" style="color:#c0392b;font-size:0.95em"></span>
        </div>
        <div class="form-group">
          <label>Ảnh đại diện</label>
          <input type="file" name="AnhDaiDien" accept="image/*" id="AnhDaiDien">
        </div>
        <div class="form-actions">
          <button type="button" class="btn-secondary" onclick="closeAddUserModal()">Hủy</button>
          <button id="addUserBtn" type="submit" class="btn-primary">Thêm người dùng</button>
        </div>
      </form>
    </div>
  </div>



  <!-- Edit User Modal -->
  <div class="modal" id="editUserModal">
    <div class="modal-content">
      <div class="modal-header">
        <h2>Chỉnh sửa người dùng</h2>
        <button class="close-modal" onclick="closeEditUserModal()">
          <i class="fas fa-times"></i>
        </button>
      </div>
      <form class="modal-form" id="editUserForm">
        <div class="form-group">
          <label>Tên đăng nhập</label>
          <input type="text" name="TenDangNhap">
        </div>
        <div class="form-group">
          <label>Mật khẩu</label>
          <input type="password" name="MatKhau">
        </div>
        <div class="form-group">
          <label>Họ và tên</label>
          <input type="text" name="HoTen">
        </div>
        <div class="form-group">
          <label>Vai trò</label>
          <select name="VaiTro">
            <option value="Admin">Quản trị viên</option>
            <option value="Giangvien">Giảng viên</option>
            <option value="Sinhvien">Sinh viên</option>
          </select>
        </div>
        <div class="form-group">
          <label>Email</label>
          <input type="email" name="Email">
        </div>
        <div class="form-group">
          <label>Số điện thoại</label>
          <input type="text" name="SoDienThoai">
        </div>
        <div class="form-group">
          <label>Ảnh đại diện</label>
          <input type="file" name="AnhDaiDien" accept="image/*">
        </div>
        <div class="form-actions">
          <button type="button" class="btn-secondary" onclick="closeEditUserModal()">Hủy</button>
          <button type="submit" class="btn-primary">Lưu</button>
        </div>
      </form>
    </div>
  </div>




  <script>
    function toggleUserMenu() {
      document.querySelector('.user-dropdown').classList.toggle('active');
    }
    // Close dropdown when clicking outside
    document.addEventListener('click', function(event) {
      const userProfile = document.querySelector('.user-profile');
      const dropdown = document.querySelector('.user-dropdown');
      if (!userProfile.contains(event.target)) {
        dropdown.classList.remove('active');
      }
    });

    function logout() {
      if (confirm('Bạn có chắc chắn muốn đăng xuất?')) {
        window.location.href = '/Account/Login';
      }
    }

    function openAddUserModal() {
      document.getElementById('addUserModal').classList.add('active');
    }

    function closeAddUserModal() {
      document.getElementById('addUserModal').classList.remove('active');
    }

    function openEditUserModal() {
      document.getElementById('editUserModal').classList.add('active');
    }

    function closeEditUserModal() {
      document.getElementById('editUserModal').classList.remove('active');
    }
    // Tự động mở popup nếu có ?open=add
    window.addEventListener('DOMContentLoaded', function() {
      const params = new URLSearchParams(window.location.search);
      if (params.get('open') === 'add') {
        openAddUserModal();
      }
    });

    window.addEventListener('DOMContentLoaded', function() {
      const params = new URLSearchParams(window.location.search);
      if (params.get('open') === 'edit') {
        openEditUserModal();
      }
    });
    let userToDelete = null;



    //AddUserAjax
    function filterUsersAjax() {
      var role = document.querySelector('.role-filter').value;
      var status = document.querySelector('.status-filter').value;
      var search = document.querySelector('.search-bar input').value;
      fetch(`/Admin/QuanLyNguoiDung/FilterAjax?role=${role}&status=${status}&search=${search}`, {
          method: 'GET',
          headers: {
            'X-Requested-With': 'XMLHttpRequest'
          }
        })
        .then(response => response.text())
        .then(html => {
          document.getElementById('user-table-body').outerHTML = html;
        });
    }
    document.querySelector('.role-filter').addEventListener('change', filterUsersAjax);
    document.querySelector('.status-filter').addEventListener('change', filterUsersAjax);

    // Gửi form bằng AJAX
    document.addEventListener('DOMContentLoaded', function() {
      var form = document.getElementById('addUserForm');
      if (form) {
        form.onsubmit = function(e) {
          e.preventDefault();
          var formData = new FormData(form);
          fetch('/Admin/QuanLyNguoiDung/AddUserAjax', {
              method: 'POST',
              body: formData
            })
            .then(response => response.json())
            .then(data => {
              // Xóa hết lỗi cũ
              document.querySelectorAll('.field-error').forEach(e => e.innerHTML = '');
              if (data.success) {
                loadUserList(1);
                closeAddUserModal();
                form.reset();
                // Hiện thông báo thành công như cũ
                var alert = document.getElementById('success-alert');
                alert.querySelector('span').innerHTML = "Thêm người dùng thành công!";
                alert.style.background = "#e6ffed";
                alert.style.color = "#219150";
                alert.style.display = 'block';
                alert.style.opacity = 1;
                setTimeout(function() {
                  alert.style.opacity = 0;
                  setTimeout(function() {
                    alert.style.display = 'none';
                  }, 500);
                }, 2000);
              } else {
                // Hiện lỗi từng trường vào đúng <span>
                if (data.errors) {
                  console.log(data.errors); // debug
                  Object.keys(data.errors).forEach(function(key) {
                    var errSpan = document.getElementById('error-' + key);
                    if (errSpan) {
                      errSpan.innerHTML = data.errors[key];
                    }
                  });
                }
              }
            });
        }
      }
    });

    function loadUserList(page = 1) {
      var role = document.querySelector('.role-filter').value;
      var status = document.querySelector('.status-filter').value;
      var search = document.querySelector('.search-bar input').value;
      fetch(`/Admin/QuanLyNguoiDung/FilterAjax?role=${role}&status=${status}&search=${search}&page=${page}`, {
          method: 'GET',
          headers: {
            'X-Requested-With': 'XMLHttpRequest'
          }
        })
        .then(response => response.text())
        .then(html => {
          document.getElementById('user-table-body').outerHTML = html;
          // Load lại phân trang
          fetch(`/Admin/QuanLyNguoiDung/PaginationPartial?role=${role}&status=${status}&search=${search}&page=${page}`, {
              method: 'GET',
              headers: {
                'X-Requested-With': 'XMLHttpRequest'
              }
            })
            .then(response => response.text())
            .then(paginationHtml => {
              document.getElementById('pagination-container').innerHTML = paginationHtml;
            });
        });
    }

    // Gọi khi trang vừa load
    document.addEventListener('DOMContentLoaded', function() {
      loadUserList(1);
    });

    // Gọi lại khi filter thay đổi
    document.querySelector('.role-filter').addEventListener('change', function() {
      loadUserList(1);
    });
    document.querySelector('.status-filter').addEventListener('change', function() {
      loadUserList(1);
    });
    document.querySelector('.search-bar input').addEventListener('input', function() {
      loadUserList(1);
    });

    // Hàm chuyển trang
    function changePage(page) {
      loadUserList(page);
    }

    function showUserAlert(message, isError = false) {
      const alertDiv = document.getElementById('user-alert');
      const alertContent = document.getElementById('user-alert-content');
      const alertMsg = document.getElementById('user-alert-message');
      const alertIcon = alertContent.querySelector('i');

      alertMsg.textContent = message;

      if (isError) {
        alertContent.style.background = '#ffeaea';
        alertContent.style.color = '#c0392b';
        alertContent.style.border = '1px solid #e0b4b4';
        alertIcon.className = 'fas fa-times-circle';
      } else {
        alertContent.style.background = '#e6fff0';
        alertContent.style.color = '#1a7f37';
        alertContent.style.border = '1px solid #b7ebc6';
        alertIcon.className = 'fas fa-check-circle';
      }

      alertDiv.style.display = 'block';
      setTimeout(() => {
        alertDiv.style.display = 'none';
        // Reset lại style về mặc định xanh cho lần sau
        if (isError) {
          alertContent.style.background = '#e6fff0';
          alertContent.style.color = '#1a7f37';
          alertContent.style.border = '1px solid #b7ebc6';
          alertIcon.className = 'fas fa-check-circle';
        }
      }, 3000);
    }

    // Hàm mở modal chỉnh sửa và load dữ liệu user
    function editUser(id) {
      fetch(`/Admin/QuanLyNguoiDung/EditUserPartial?id=${id}`, {
          method: 'GET',
          headers: {
            'X-Requested-With': 'XMLHttpRequest'
          }
        })
        .then(response => response.text())
        .then(html => {
          if (html.includes("Không thể chỉnh sửa")) {
            showUserAlert("Không thể chỉnh sửa người dùng đang ở trạng thái Không hoạt động!", true);
            return;
          }

          document.querySelector('#editUserModal .modal-content').innerHTML = `
            <div class="modal-header">
              <h2>Chỉnh sửa người dùng</h2>
              <button class="close-modal" onclick="closeEditUserModal()"><i class="fas fa-times"></i></button>
            </div>
            ${html}
          `;
          openEditUserModal();

          var form = document.getElementById('editUserForm');
          if (form) {
            form.onsubmit = function(e) {
              e.preventDefault();

              // Reset all error messages and log current error spans
              console.log('Available error spans:');
              form.querySelectorAll('.field-error').forEach(span => {
                console.log('Error span ID:', span.id);
                span.textContent = '';
                span.style.display = 'none';
              });

              var formData = new FormData(form);
              fetch('/Admin/QuanLyNguoiDung/EditUserAjax', {
                  method: 'POST',
                  body: formData
                })
                .then(response => response.json())
                .then(data => {
                  console.log('Full server response:', data);

                  if (data.success) {
                    loadUserList(1);
                    closeEditUserModal();
                    showUserAlert("Cập nhật người dùng thành công!");
                  } else if (data.errors) {
                    console.log('Processing errors object:', data.errors);

                    // Log all error spans again for comparison
                    console.log('Current error spans in form:');
                    form.querySelectorAll('.field-error').forEach(span => {
                      console.log('Available span:', span.id);
                    });

                    // Process each error
                    Object.entries(data.errors).forEach(([key, message]) => {
                      console.log(`Trying to display error for key "${key}" with message "${message}"`);
                      const errorSpan = form.querySelector(`#error-${key}`);
                      console.log('Found error span:', errorSpan);

                      if (errorSpan) {
                        console.log(`Setting error message for ${key}`);
                        errorSpan.textContent = message;
                        errorSpan.style.display = 'block';
                        // Force a reflow
                        errorSpan.offsetHeight;
                      } else {
                        console.warn(`Error span not found for key: ${key}`);
                      }
                    });
                  }
                })
                .catch(error => {
                  console.error('Fetch error:', error);
                  showUserAlert("Có lỗi xảy ra khi cập nhật!", true);
                });

              return false;
            }
          }
        });
    }

    function updateStatusUser(id, newStatus) {
      var btn = event.currentTarget;
      btn.disabled = true;
      var icon = btn.querySelector('i');
      var oldClass = icon.className;
      icon.className = 'fas fa-spinner fa-spin';
      fetch('/Admin/QuanLyNguoiDung/UpdateStatusUser', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'X-Requested-With': 'XMLHttpRequest'
          },
          body: `IdTaiKhoan=${id}&TrangThai=${newStatus}`
        })
        .then(response => response.json())
        .then(data => {
          btn.disabled = false;
          if (data.success) {
            loadUserList(1); // reload lại danh sách user
          } else {
            icon.className = oldClass;
            alert(data.errors.General || 'Có lỗi xảy ra!');
          }
        })
        .catch(() => {
          btn.disabled = false;
          icon.className = oldClass;
          alert('Có lỗi xảy ra!');
        });
    }

    function confirmUpdateStatusUser(id, newStatus) {
      var msg = newStatus === 'HoatDong' ? 'Bạn có chắc muốn chuyển trạng thái sang Hoạt động?' : 'Bạn có chắc muốn chuyển trạng thái sang Không hoạt động?';
      if (confirm(msg)) {
        updateStatusUser(id, newStatus);
      }
    }
  </script>