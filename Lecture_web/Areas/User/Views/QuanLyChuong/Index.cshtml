  @model Lecture_web.Models.ViewModels.SearchChuongViewModel<Lecture_web.Models.ViewModels.ListChuongViewModel>
@{
    ViewData["Title"] = "Quản lý chương";
    Layout = "~/Areas/User/Views/Shared/_Layout.cshtml";
}

@section style
{

 <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr" crossorigin="anonymous" rel="stylesheet" />

       <style>
        .text-danger {
            color: red !important;
        }

        #editChapterModal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.4);
            justify-content: center;
            align-items: center;
            z-index: 2000;
        }

        #editChapterModal.open {
            display: flex;
        }

        #editChapterModal select, #addAssignmentModal select {
            padding: 13px 16px;
            border-radius: 7px;
            border: 1.5px solid #d0d7de;
            font-size: 1rem;
            background: #fff;
            transition: border-color 0.2s, box-shadow 0.2s;
            width: 100%;
            margin-bottom: 0;
            }

        #addAssignmentModal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.4);
            align-items: center;
            justify-content: center;
            z-index: 2000;
        }

        #addAssignmentModal.open {
            display: flex;
        }


        .pagination {
            display: flex;
            list-style: none;
            padding: 0;
            margin: 1.5rem 0;
            justify-content: center;
        }


        .pagination li {
            margin: 0 0.25rem;
        }


        .pagination li a,
        .pagination li span {
            display: block;
            padding: 0.5rem 0.75rem;
            text-decoration: none;
            border: 1px solid #ddd;
            border-radius: 4px;
            color: #007bff;
            font-weight: 500;
        }


            .pagination li a:hover {
                background-color: #f1f1f1;
            }


        .pagination li.active span {
            background-color: #007bff;
            color: #fff;
            border-color: #007bff;
        }


        .pagination li.disabled span {
            color: #aaa;
            border-color: #ddd;
            cursor: default;
        }




        .parent-row {
            background-color: #2c3e50 !important;
            color: #ffffff;
        
        }

        .collapsing {
            height: auto !important;
            transition: none !important;
        }


    </style>
     
}


<div class="assignment-management-container">
    <div class="assignment-header">
            <h2>@Model.TenBaiGiang</h2>
        <div class="assignment-actions">
            <button class="btn-primary add-chapter-btn"
                onclick="openAddAssignmentModal()">
                <i class="fas fa-plus"></i> Thêm chương
            </button>
            <form id="searchForm"
                  method="get"
                  action='@Url.Action("Index","QuanLyChuong", new { area = "User" })'
                  class="search-form"
                  style="display:flex; align-items:center; gap:0.5rem; margin-bottom:1rem;">

            
                <input type="hidden" name="page" value="1" />

            
                <select name="tenbg"
                        style="padding:0.5rem 1rem; border:1px solid #ddd; border-radius:5px;">
                    <option value="" @(string.IsNullOrEmpty(Model.baigiang) ? "selected" : "")>
                        -- Lọc theo bài giảng --
                    </option>
                    @foreach (var bg in ViewBag.lectures)
                    {
                        var td = bg.TieuDe;
                        var kq = td.Length > 30 ? td.Substring(0, 30) + "..." : td;

                        <option value="@bg.TieuDe"
                        @(bg.TieuDe == Model.baigiang ? "selected" : "") title="@td">
                            
                            @kq
                        </option>
                    }
                </select>


                <input type="text"
                       name="search"
                       value="@Model.SearchTerm"
                       placeholder="Tìm kiếm chương..."
                       style="flex:1; padding:0.5rem 1rem; border:1px solid #ddd; border-radius:5px;" />


                <button type="submit"
                        style="border:none; background:none; cursor:pointer; font-size:1.2rem;">
                    <i class="fas fa-search"></i>
                </button>
            </form>



        </div>
    </div>
    <div class="assignment-list">
        <table class="assignment-table" id="assignmentTable">
            <colgroup>
                <col style="width:5%">
                <col style="width:35%">
                <col style="width:25%">
                <col style="width:25%">
                <col style="width:10%">
            </colgroup>
            <thead>
                <tr>
                    <th></th>
                    <th>Tên chương</th>
                    <th>Ngày tạo</th>
                    <th>Ngày cập nhật</th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var c in Model.Items)
                {
                    var collapseId = "collapseChuong" + c.IdChuong;
                    <!-- Hàng mẹ -->
                    <tr class="parent-row">
                        <td class="px-1">
                            <button class="btn btn-sm btn-light"
                                    data-bs-toggle="collapse"
                                    data-bs-target="#@collapseId"
                                    aria-expanded="false">
                                <i class="fas fa-chevron-down"></i>
                            </button>
                        </td>
                        <td>@c.Ten</td>
                        <td>@c.NgayTao</td>
                        <td>@c.NgayCapNhat</td>
                        <td class="assignment-actions-btns">
                            <button type="button"
                                    class="btn-secondary edit-chapter-btn"
                                    data-chapter="@c.IdChuong"
                                    title="Chỉnh sửa">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button type="button"
                                    class="btn-danger delete-chapter-btn"
                                    data-chapter="@c.IdChuong"
                                    title="Xóa">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                    <!-- Hàng con (detail-row) -->
                    <tr class="collapse collapse-row" id="@collapseId">
                        <td colspan="6" class="p-0">
                            <table class="assignment-table nested-table" id="assignmentTable">
                                <colgroup>
                                    <col style="width:5%">
                                    <col style="width:35%">
                                    <col style="width:25%">
                                    <col style="width:25%">
                                    <col style="width:10%">
                                </colgroup>
                                <thead class="table-light">
                                    <tr>
                                        <th></th>
                                        <th>Tên bài học</th>
                                        <th>Ngày tạo</th>
                                        <th>Ngày cập nhật</th>
                                        <th>Thao tác</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var b in c.Bai)
                                    {
                                        <tr>
                                            <td></td>
                                            <td>@b.TenBai</td>
                                            <td>@b.NgayTao</td>
                                            <td>@b.NgayCapNhat</td>
                                            <td class="assignment-actions-btns">
                                                <a asp-area="User" asp-controller ="QuanLyBai" asp-action = "EditBai" asp-route-idbai="@b.IdBai" asp-route-idchuong="@b.IdChuong"
                                                class="btn-secondary edit-lesson-btn"
                                                title="Chỉnh sửa">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <button type="button"
                                                class="btn-danger delete-lesson-btn"
                                                data-lesson="IdBai"
                                                title="Xóa">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <nav>
            <ul class="pagination">
                @* Nút Back *@
                @if (Model.CurrentPage > 1)
                {
                    <li>
                        <a href="?page=@(Model.CurrentPage-1)&search=@Model.SearchTerm">«</a>
                    </li>
                }
                else
                {
                    <li class="disabled">
                        <span>«</span>
                    </li>
                }

                @* Các trang số *@
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    if (i == Model.CurrentPage)
                    {
                        <li class="active"><span>@i</span></li>
                    }
                    else
                    {
                        <li><a href="?page=@i&search=@Model.SearchTerm">@i</a></li>
                    }
                }

                @* Nút Next *@
                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li>
                        <a href="?page=@(Model.CurrentPage+1)&search=@Model.SearchTerm">»</a>
                    </li>
                }
                else
                {
                    <li class="disabled">
                        <span>»</span>
                    </li>
                }
            </ul>
        </nav>
    </div>
  </div>
  </main>
  </div>
  <!-- Modal thêm mới chương (demo) -->
<!-- Modal thêm mới chương -->
<div class="modal" id="addAssignmentModal">
    <div class="modal-content chapter-modal-content">
        <div class="modal-header chapter-modal-header">
            <i class="fas fa-layer-group"></i>
            <h2>Thêm chương mới</h2>
            <button class="close-modal" onclick="closeAddAssignmentModal()">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <form method="post"
              action="@Url.Action("CreateChuong","QuanLyChuong",new{area="User"})"
              class="modal-form chapter-modal-form">
            @Html.AntiForgeryToken()

            <div class="form-group">
                <label>Tên chương <span class="required">*</span></label>
                <input type="text"
                       name="tenchuong"
                       id="addChapterName"
                       class="form-control"
                       placeholder="Nhập tên chương" />
                <span asp-validation-for="tenchuong" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label>Bài giảng <span class="required">*</span></label>
                <select name="BaiGiang"
                        id="addChapterLecture"
                        class="form-control">
                    <option value="">-- Chọn bài giảng --</option>
                </select>
              
            </div>
            <span asp-validation-for="BaiGiang" class="text-danger"></span>

            <div class="form-actions">
                <button type="button"
                        class="btn-secondary"
                        onclick="closeAddAssignmentModal()">
                    Hủy
                </button>
                <button type="submit" class="btn-primary">
                    Thêm mới <i class="fas fa-plus"></i>
                </button>
            </div>
        </form>
    </div>
</div>










<!-- Modal chỉnh sửa chương -->
<div class="modal" id="editChapterModal">
    <div class="modal-content chapter-modal-content">
        <div class="modal-header chapter-modal-header">
            <i class="fas fa-layer-group"></i>
            <h2>Chỉnh sửa chương</h2>
            <button class="close-modal" onclick="closeEditChapterModal()">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <form id="editChapterForm"
              method="post"
              action="@Url.Action("EditChuong","QuanLyChuong",new{area="User"})"
              class="modal-form chapter-modal-form">
            @Html.AntiForgeryToken()
            <input type="hidden" name="idchuong" id="editChapterId" />

            <div class="form-group">
                <label>Tên chương <span class="required">*</span></label>
                <input type="text"
                       name="tenchuong"
                       id="editChapterName"
                       class="form-control"
                       />
                <span asp-validation-for="tenchuong" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label>Bài giảng <span class="required">*</span></label>
                <select name="BaiGiang"
                        id="editChapterLecture"
                        class="form-control"
                        required>
                    <option value="">-- Chọn bài giảng --</option>
                </select>
                <span asp-validation-for="BaiGiang" class="text-danger"></span>
            </div>

            <div class="form-actions">
                <button type="button" class="btn-secondary" onclick="closeEditChapterModal()">Hủy</button>
                <button type="submit" class="btn-primary">Lưu <i class="fas fa-save"></i></button>
            </div>
        </form>
    </div>
</div>


  <!-- Modal xác nhận xóa chương -->
@*   <div class="modal" id="confirmDeleteChapterModal">
    <div class="modal-content" id="confirmDeleteModalContent">
      <div class="modal-header" style="justify-content:center;">
        <h2 style="font-size:1.1rem; margin:0 auto;">Xác nhận xóa</h2>
      </div>
      <div class="modal-form" style="padding:20px;">
        <p>Bạn có chắc chắn muốn xóa chương này?</p>
        <div class="modal-actions">
          <button class="btn-secondary" onclick="closeConfirmDeleteChapter()">Hủy</button>
          <button class="btn-danger" onclick="confirmDeleteChapter()">Xóa</button>
        </div>
      </div>
    </div>
  </div> *@




@section scripts {

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
   
<script>
    function SearchChuong() {
        $('#searchForm').on('submit', function (e) {
            e.preventDefault();
            var url = $(this).attr('action'),
                data = $(this).serialize();
            $.get(url, data, function (html) {
                var newRes = $('<div>').html(html)
                    .find('.assignment-list').html();
                $('.assignment-list').html(newRes);
                SearchChuong();
            });
        });
    }
    $(function () {
        SearchChuong();
    });

        $(function () {

            $('#assignmentTable').on('show.bs.collapse', 'tr.collapse-row', function () {
                $(this).prev('tr.parent-row').addClass('row-open');
            });

            $('#assignmentTable').on('hide.bs.collapse', 'tr.collapse-row', function () {
                $(this).prev('tr.parent-row').removeClass('row-open');
            });
        });


    // Chỉnh sửa chương


    $(function () {
        // 1) Bắt click “Chỉnh sửa”
        $(document).on('click', 'button.edit-chapter-btn', function () {
            var id = $(this).data('chapter');            // <— đây là biến đúng
            $.getJSON(
                '@Url.Action("EditChuong", "QuanLyChuong", new { area = "User" })',
                { id: id }                                  // <— truyền biến id chứ không phải idChuong!
            )
                .done(function (data) {
                    console.log(data);
                    // 2) Điền form
                    $('#editChapterId').val(data.idChuong);
                    $('#editChapterName').val(data.tenChuong);

                    var $ddl = $('#editChapterLecture')
                        .empty()
                        .append('<option value="">-- Chọn bài giảng --</option>');

                    data.listbg.forEach(function (bg) {
                        var td = bg.tieuDe;
                        var kq = td.length > 30 ? td.substring(0, 30) + "..." : td;
                        var selected = td === data.baiGiang ? ' selected' : '';
                        $ddl.append('<option value="' + td + '"' + selected + ' title="' + td + '">' + kq + '</option>');
                    });
             
                    // 3) Mở modal
                    $('#editChapterModal').addClass('open');
                })
                .fail(function () {
                    alert('Không tải được dữ liệu chương');
                });
        });

        // 4) Đóng modal
        window.closeEditChapterModal = function () {
            $('#editChapterModal').removeClass('open');
        };

        // 5) AJAX submit form chỉnh sửa
        $('#editChapterForm').on('submit', function (e) {
            e.preventDefault();
            var $f = $(this),
                url = $f.attr('action'),
                data = $f.serialize(),
                token = $f.find('input[name="__RequestVerificationToken"]').val();
            $f.find('span.text-danger').text('');
            $.ajax({
                url: url,
                type: 'POST',
                data: data,
                headers: { 'RequestVerificationToken': token }
            })
                .done(function () {
                    closeEditChapterModal();
                    Swal.fire({
                        icon: 'success',
                        title: 'Đã cập nhật chương',
                        timer: 1200,
                        showConfirmButton: false
                    }).then(function () {
                        location.reload();
                    });
                })
                .fail(function (xhr) {
                    console.log('ERROR', xhr.status, xhr.responseText);
                    if (xhr.status === 400 && xhr.responseJSON.errors) {
                        // clear old errors
                        $('#editChapterForm').find('span.text-danger').text('');
                        var errs = xhr.responseJSON.errors;
                        // xóa lỗi cũ
                        $('#editChapterForm').find('span.text-danger').text('');
                        $.each(errs, function (field, messages) {
                            // hiển thị message đầu tiên
                            $('[asp-validation-for="' + field + '"]').text(messages[0]);
                        });
                    } else {
                        alert('Lỗi server, vui lòng thử lại');
                    }
                });
        });
    });

    $(function () {
        // 1) Mở modal “Thêm chương” và load danh sách bài giảng
        $(document).on('click', '.btn-primary.add-chapter-btn', function () {
            $.getJSON('@Url.Action("CreateChuong", "QuanLyChuong", new { area = "User" })')
                .done(function (data) {
                    var $ddl = $('#addChapterLecture').empty()
                        .append('<option value="">-- Chọn bài giảng --</option>');
                    data.listbg.forEach(function (title) {
                        $ddl.append('<option value="' + title + '">' + title + '</option>');
                    });
                    $('#addAssignmentModal').addClass('open');
                })
                .fail(function () {
                    alert('Không tải được danh sách bài giảng');
                });
        });

        // 2) Đóng modal
        window.closeAddAssignmentModal = function () {
            $('#addAssignmentModal').removeClass('open');
            // reset form và xóa lỗi
            $('#addAssignmentModal .modal-form')[0].reset();
            $('#addAssignmentModal').find('span.text-danger').text('');
        };

        // 3) AJAX submit form Thêm chương
        $('#addAssignmentModal .modal-form').on('submit', function (e) {
            e.preventDefault();
            var $f = $(this),
                url = $f.attr('action'),
                token = $f.find('input[name="__RequestVerificationToken"]').val(),
                data = $f.serialize();

            $.ajax({
                url: url,
                type: 'POST',
                data: data,
                headers: { 'RequestVerificationToken': token }
            })
                .done(function () {
                    closeAddAssignmentModal();
                    Swal.fire({
                        icon: 'success',
                        title: 'Đã thêm chương',
                        timer: 1200,
                        showConfirmButton: false
                    }).then(function () {
                        location.reload();
                    });
                })
                .fail(function (xhr) {
                    if (xhr.status === 400 && xhr.responseJSON.errors) {
                        var errs = xhr.responseJSON.errors;
                        // xóa lỗi cũ
                        $('#addAssignmentModal').find('span.text-danger').text('');
                        // hiển thị lỗi mới
                        $.each(errs, function (field, msgs) {
                            $('[asp-validation-for="' + field + '"]', '#addAssignmentModal')
                                .text(msgs[0]);
                        });
                    } else {
                        alert('Lỗi server, vui lòng thử lại');
                    }
                });
        });
    });

    //Xóa chương

    $(function () {

        $(document).on('click', '.delete-chapter-btn', function () {
            var chapterId = $(this).data('chapter');

            Swal.fire({
                title: 'Xác nhận xóa',
                text: 'Bạn có chắc chắn muốn xóa chương này?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteChuong", "QuanLyChuong", new { area = "User" })',
                        type: 'POST',
                        data: {
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(),
                            idchuong: chapterId
                        }
                    })
                        .done(function (res) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Đã xóa chương',
                                timer: 1200,
                                showConfirmButton: false
                            }).then(() => location.reload());
                        })
                        .fail(function (xhr) {
                            var msg = 'Có lỗi xảy ra';
                            if (xhr.status === 400 && xhr.responseJSON && xhr.responseJSON.error) {
                                msg = xhr.responseJSON.error;
                            }
                            Swal.fire({
                                icon: 'error',
                                title: 'Không thể xóa',
                                text: msg
                            });
                        });
                }
            });
        });
    });
        $(function() {
      console.log('AntiForgeryToken =', $('input[name="__RequestVerificationToken"]').val());
    });
</script>
}


