@model Lecture_web.Models.ViewModels.EditBaiViewModel    
@{
    ViewData["Title"] = "Ch·ªânh s·ª≠a b√†i";
    Layout = "~/Areas/User/Views/Shared/_Layout.cshtml";
    }

@section style {
    <link rel="stylesheet" href="https://cdn.ckeditor.com/ckeditor5/45.2.1/ckeditor5.css" />

        <style>
        .main-content {
            flex: 1;
            padding: 20px;
            margin-left: 140px;
            min-height: 100vh;
        }
            .bai-modal-form textarea {
                min-height: 400px;
                height: auto;

            }

            .bai-modal-form{
                max-width: 1200px !important;
                margin:0px 0px !important;
                width:auto;
            }

            .text-danger {
                color: red !important;
                width: 100%;
            }

        .ck-editor__main, .ck-editor__editable_inline {
                height: 400px;
                max-height: 400px;
                overflow-y: auto;
                resize: none;
        
            }

        .ck-content iframe {
            pointer-events: auto;
        }


        .ck-content .ck-media .ck-widget__wrapper {
            padding-bottom: 56.25% !important;
        }

        .ck-editor__editable.ck-content ol {
            list-style-type: decimal;
            margin-left: 1.5em;
            padding-left: 0;
        }

        .ck-editor__editable.ck-content ul {
            list-style-type: disc;
            margin-left: 1.5em;
            padding-left: 0;
        }

        .ck-editor__editable.ck-content li {
            margin: 0.5em 0;
        }

        .ck-editor__editable.ck-content iframe {
            pointer-events: auto;
        }

        .ck-content img.resizable-bound {
            display: inline-block !important;
            pointer-events: auto !important;
        }



 
        </style>

    }

    <main class="main-content">
        <div class="assignment-management-container">
            <div class="assignment-header">
                <h2>Ch·ªânh s·ª≠a b√†i</h2>
            </div>
            <form asp-area="User"
                  asp-controller="QuanLyBai"
                  asp-action="EditBai"
                  id="editBaiForm"
                  method="post"
                  class="bai-modal-form"
                  style="max-width:800px;margin:30px auto;">
                @Html.AntiForgeryToken()

                <input asp-for="IdBai" type="hidden" />
                <input asp-for="IdChuong" type="hidden" />

                <div class="form-group">
                    <label asp-for="TieuDeBai">Ti√™u ƒë·ªÅ</label>
                <input asp-for="TieuDeBai" class="form-control" maxlength="" />
                    <span asp-validation-for="TieuDeBai" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="NoiDung"> N·ªôi dung</label>
                    
                    <textarea asp-for="NoiDung" 
                    class="form-control" 
                    rows="6"
                    id="NoiDungEditor">
                
                    </textarea>
                    <span asp-validation-for="NoiDung" class="text-danger"></span>
                </div>
                <div class="form-actions" style="text-align:right">
                    <a asp-area="User"
                       asp-controller="QuanLyChuong"
                       asp-action="Index"
                       asp-route-idbg="@Model.IdBaiGiang"
                       class="btn-secondary">H·ªßy</a>
                    <button type="submit" class="btn-primary">
                        L∆∞u <i class="fas fa-save"></i>
                    </button>
                </div>
            </form>
        </div>
    </main>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.ckeditor.com/ckeditor5/39.0.0/classic/ckeditor.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/interactjs/dist/interact.min.js"></script>
@*     <script src="~/lib/ckeditor5/ckeditor.js"></script> *@

  <script>
        let myEditor;
        ClassicEditor
            .create(document.querySelector('#NoiDungEditor'), {
                toolbar: [
                    'heading', '|', 'bold', 'italic', 'underline', 'strikethrough', 'link', 'blockQuote', 'insertTable',
                    '|', 'bulletedList', 'numberedList',
                    '|', 'mediaEmbed', 'undo', 'redo', 'imageStyle:alignLeft', 'imageStyle:center', 'imageStyle:alignRight'
                ],
                mediaEmbed: {
                    previewsInData: true,

  
                    extraProviders: [
                        {
                            name: 'drive',
                            url: [
                                /https:\/\/drive\.google\.com\/file\/d\/([a-zA-Z0-9_-]+)\/view/
                            ],
                            html: match => {
                                const id = match[1];
                                return (
                                    '<div style="position:relative;padding-bottom:56.25%;height:0;">' +
                                    `<iframe src="https://drive.google.com/file/d/${id}/preview" ` +
                                    'style="position:absolute;top:0;left:0;width:100%;height:100%;" ' +
                                    'frameborder="0" allow="autoplay; encrypted-media" allowfullscreen>' +
                                    '</iframe>' +
                                    '</div>'
                                );
                            }
                        }
                    ]
                },


                link: {
                    decorators: {
                        addTargetBlank: {
                            mode: 'automatic',
                            callback: () => true,
                            attributes: {
                                target: '_blank',
                                rel: 'noopener noreferrer'
                            }
                        }
                    }
                },
            })
            .then(editor => {
                const editableEl = editor.ui.view.editable.element;

                function makeImagesResizable() {
                    const imgs = editableEl.querySelectorAll('img');
                    console.log('üîç makeImagesResizable, imgs:', imgs.length);
                    imgs.forEach(img => {
                        if (img.classList.contains('resizable-bound')) return;
                        img.classList.add('resizable-bound');
                        interact(img).resizable({
                            edges: { left: true, right: true, bottom: true, top: true },
                            invert: 'none',
                            listeners: {
                                move(event) {
                                    // x√≥a vi·ªác d√πng translate(), ch·ªâ update k√≠ch th∆∞·ªõc
                                    const img = event.target;

                                    // L·∫•y k√≠ch th∆∞·ªõc m·ªõi
                                    const w = Math.round(event.rect.width);
                                    const h = Math.round(event.rect.height);

                                    // G√°n v√†o inline style ƒë·ªÉ CKEditor getData() nh·∫∑t l√™n
                                    img.style.width = w + 'px';
                                    img.style.height = h + 'px';

                                    // N·∫øu b·∫°n th√≠ch: ƒë·∫∑t lu√¥n attribute width/height ƒë·ªÉ d·ªÖ HTML
                                    img.setAttribute('width', w);
                                    img.setAttribute('height', h);
                                }
                            }
                        })
                    });
                }

                editor.model.document.on('change:data', () => {
                    setTimeout(makeImagesResizable, 100);
                });
                // l·∫ßn ƒë·∫ßu
                makeImagesResizable();
            })
            .catch(console.error);




        $('#editBaiForm').on('submit', function (e) {
            e.preventDefault();
            var $f = $(this),
                url = $f.attr('action'),
                token = $f.find('input[name="__RequestVerificationToken"]').val();

 
            $f.find('span.text-danger').text('');

            if (myEditor) {
                const htmlFromDom = myEditor.ui.view.editable.element.innerHTML;
                // G√°n v√†o textarea ƒë·ªÉ serialize l√™n server
                $f.find('textarea[name="NoiDung"]').val(htmlFromDom);
            }

            data = $f.serialize(),

            $.ajax({
                url: url,
                type: 'POST',
                data: data,
                headers: { 'RequestVerificationToken': token }
            })
                .done(function (resp) {
                    Swal.fire({
                        icon: 'success',
                        title: 'ƒê√£ c·∫≠p nh·∫≠t b√†i',
                        timer: 1200,
                        showConfirmButton: false
                    }).then(function () {
                        window.location.href = '@Url.Action("Index", "QuanLyChuong", new { area = "User", idbg = Model.IdBaiGiang })';
                    });
                })
                .fail(function (xhr) {
                    if (xhr.status === 400 && xhr.responseJSON.errors) {
                        var errs = xhr.responseJSON.errors;
                        $f.find('.is-invalid').removeClass('is-invalid');
                        $f.find('span[data-valmsg-for]').text('');
                        $.each(errs, function (field, messages) {
                            var $msg = $f.find('span.text-danger[data-valmsg-for="' + field + '"]');
                            $msg.text(messages[0]);
                        });
                    } else {
                        alert('L·ªói server, th·ª≠ l·∫°i');
                    }
                });
        });


    </script>




}